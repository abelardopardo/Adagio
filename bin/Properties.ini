#
# ADA Properties file
#
# This is a sample of a Properties.txt file
#
# The file is divided into sections. The beginning of a section is marked by a
# line starting by [name] or [name.subname] and finishes when a new section or
# the end of file is found.
#
# All sections except [ada] can be "named" or "unmamed". A named section is a
# section that contains a .<name> suffix. For example [xslt.first] is a section
# of type xslt with name "first". This allows multiple sections of the same type
# to be included in the file.
#
# A section contains a set of definitions of the form name = value. Any string
# may contain a substring of the form %(name)s which will be replaced by the
# value of the variable name previously defined.
#
# If a named section is included after its corresponding unnamed section, the
# variables in the unamed section are all visible from the named section. For
# example:
#
# [xslt] # Unnamed xslt section
#         languages = en es # Definition of the languages to use
#
#
# [xslt.first] # Named xslt section uses the languages value defined in the
#                unnamed section
#         style = MyStyle
#
# The command "adado" executes all the rules in the rule property in the order
# they appear ignoring "clean", "local", "dump", "help", "helpdump" or
# "dumphelp".
#
# For every rule, the rule rule.help explains how the rule works, and rule.dump
# shows the value of all the relevant variables.2
#
# The following symbols are always defined by default:
#
#  - basedir:          The value of the current directory
#  - current_datetime: Time of execution of script
#  - debug_level:      Integer controlling messages shown
#  - dst_dir:          The value of the current directory
#  - file_separator:   Taken from the platform
#  - files:            Files to be processed
#  - home:             Directory where ADA is installed
#  - locale:           Taken from execution environment
#  - profile_revision: Value passed to xslt processing as profile.revision
#  - project_file:     File name marking the root of a project 'Ada.project'
#  - project_home:     Directory where Ada.project has been located
#  - property_file:    File to read in each dir (Properties.txt)
#  - src_dir:          Source directory to consider for source files (current)
#  - version:          Current ADA version
#
# It follows a sample of a Properties.txt with all possible unnamed rules
#
# ADA General section. Typically written at the top of the file
#
[DEFAULT]
        # Values that are visible for all the sections (or Rules)

[ada]
        minimum_version = # Minimum version required
        maximum_version = # Maximum version allowed
        exact_version =   # Exact version required

[xslt]
        styles = %(home)s/ADA_Styles/DocbookProfile.xsl # Style to apply
        output_format = html # Extension of the result file
        extra_arguments = --stringparam somename somevalue # To be passed to exec
        languages = en # Space separated list of Languages to consider

[inkscape]
        exec = inkscape            # Executable to use
        output_format = png        # Extension of the output file produced
        extra_arguments =          # Anything here is passed to exec

[gotodir]
        files = d1 d2   # Space separated lists of dirs to process recursively
        targets = t1 t2 # List of rules to execute in the remote dir

[gimp]
        exec = gimp                # Executable to use
        script_file = %(home)s%(ada.file_separator)sAntImports%(ada.file_separator)sxcftopng.scm
        extra_arguments =          # Anything here is passed to exec

[convert]
        exec = convert             # Executable to use
        output_format = png        # File estension to use

        geometry = 100x120         # Geometry to use when converting
        crop_option =              # Option to crop
        extra_arguments =          # Anything here is passed to exec

[copy]
        # Works with "files", "src_dir" and "dst_dir" already defined.

[export]
        date_format = yyyy/MM/dd HH:mm:ss
        begin = yyy/MM/dd HH:mm:ss # Start of enabled window
        end = yyy/MM/dd HH:mm:ss   # End of enabled window
        open = True                # It is considered for export (general enable)
        profile_revision = r1 r2   # Revisions to consider

[dblatex]
        exec = dblatex # Executable to use
        output_format = pdf # Extension of the result file
        extra_argumentss = org1 org2 # Options passed directly to the exec
        extra_xsltproc_arguments = arg1 arg2 # Options passed directly to XSLT
        compliant_mode = 0/1 # if adapted to ADA or not

[exercise]
        styles = %(home)s/ADA_Styles/ExerciseSubmit.xsl
        submit_styles = %(home)s/ADA_Styles/AsapSubmit.xsl
        output_format = html
        extra_args = arg1 arg2 # Args passed directly to xslt
        produce = regular solution pguide submit # Any subset of them
        languages = en es # Space separated list of Languages to consider

[exam]
        styles = %(home)s%(file_separator)sADA_Styles%(file_separator)sExam.xsl
        output_format = html # Extension for the result file
        extra_arguments = opt1 opt2 # Dictionary to pass to the executable
        produce = regular solution pguide submit # Any subset of them
        languages = en es # Space separated list of Languages to consider

[testexam]
        styles = %(home)s%(file_separator)sADA_Styles%(file_separator)sExam.xsl
        output_format = html # Extension of the result file
        extra_arguments = opt1 opt2 # Dictionary to pass to the executable
        produce = regular solution pguide submit # Any subset of them
        languages = en es # Space separated list of Languages to consider

[office2pdf]
        exec = soffice        # Executable to use
        extra_arguments =     # Dictionary to pass to the executable

[template]
        files = f1.ini f2.ini # Include the content of the files in place. The
                              

[rsync]
        exec = rsync          # Executable to use
	src_dir =             # source directory to synchronize
	dst_dir =             # destination to synchronize
	extra_arguments =     # Options to pass to rsync

[script]
	src_dir = %(basedir)s # source directory
        files =               # Script files to import
	function = main       # Name of the function to execute
	
# ------------------------------------------------------------------------------
#
# NOT IMPLEMENTED YET! (and some of them won't be)
#
# ------------------------------------------------------------------------------
[pdfnup]
        exec = pdfnup # Executable to use
        nup_option = 1x2 # Option to print n up

[ps2pdf]
        exec = ps2pdf # Executable to use
        extra_args = option option # Anything here is passed to exec


[pdflatex]
        exec = pdflatex # Executable to use
        extra_args = opt1 opt2 # To be passed directly to the executable

[latex]
        exec = latex # Executable to use
        extra_args = opt1 opt2 # To be passed directly to the executable

[dvips]
        exec = dvips # Executable to use

[rss]
        debug = %(ada.debug_level)s # Debug level inherited from ada section
        output_format = _rss.xml
        styles = %(home)s/ADA_Styles/Rss.xsl
        styles_tohtml = %(home)s/ADA_Styles/RssToHtml.xsl

        extra_args = opt1 opt2 # Arguments to pass to xsltproc
        multilingual_files = file1 file2 # Space separated list of
                                           # multilingual files

# ##############################################################################
#
# Ohter ideas for sections in the Properties.txt file (brainstorming)
#
# ##############################################################################
#
# [group]
#         targets = t1 t2 t4 # Group of targets

# [group.name]
#         targets = t1 t2 t4 # Named Group of targets

