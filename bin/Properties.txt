#
# ADA Properties file
#
# This is a sample of a Properties.txt file
#
# The file is divided into sections. The beginning of a section is marked by a
# line starting by [name] or [name.subname] and finishes when a new section or
# the end of file is found.
#
# All sections except [ada] can be "named" or "unmamed". A named section is a
# section that contains a .<name> suffix. For example [xslt.first] is a section
# of type xslt with name "first". This allows multiple sections of the same type
# to be included in the file.
#
# A section contains a set of definitions of the form name = value. If only the
# name is included, the value True is assumed. Any string may contain a
# substring of the form %(name)s which will be replaced by the value of the
# variable name previously defined.
#
# If a named section is included after its corresponding unnamed section, the
# variables in the unamed section are all visible from the named section. For
# example:
#
# [xslt] # Unnamed xslt section
#         exec = xsltproc # Definition of the exec
#
# [xslt.first] # Named xslt section uses the exec value defined in the unnamed
#
# If a section is included several times, the union of the definitions included
# up to that point is considered. If a variable is defined in several lines,
# only the last value considered.
#
# The following symbols are always defined by default:
#
#  - home:             Directory where ADA is installed
#  - basedir:          The value of the current directory
#  - src_dir:          The value of the current directory
#  - dst_dir:          The value of the current directory
#  - files:            Files to be processed
#  - debug_level:      Integer controlling messages shown
#  - version:          Current version number
#  - locale:           Taken from execution environment
#  - property_file:    File to read in each dir (Properties.txt)
#  - file_separator:   Taken from the platform
#  - current_datetime: Time of execution of script
#  - profile_revision: Value passed to xslt processing as profile.revision
#
# It follows a sample of a Properties.txt with all possible options.
#
# ADA General section. Typically written at the top of the file
#
[ada]
        minimum_version = 2.1.10 # Minimum version required
        maximum_version = 3.1.10 # Maximum version allowed
        exact_version = 2.2.1 # Exact version required

[xslt]
        exec = xsltproc # Executable to use for processing
        style_file = %(ada.home)s/ADA_Styles/DocbookProfile.xsl # Style to apply
        output_format = html # Extension of the result file
        extra_arguments = --stringparam somename somevalue # To be passed to exec
        merge_styles = file1 file2 file3 # Styles to combine with style_file
        languages = en # Space separated list of Languages to consider

[xfig]
        exec = fig2dev # Executable to use
        output_format = png # Output extension

        border = 2 # Border to surround the figure when exporting
        smooth = 4 # Some strange option that improves image quality
        extra_args = option option # Anything here is passed to exec

[inkscape]
        exec = inkscape            # Executable to use
        output_format = png        # Extension of the output file produced
        extra_args = option option # Anything here is passed to exec

[convert]
        exec = convert # Executable to use
        format = png # File estension to use

        geometry = 100x120 # Geometry to use when converting
        suffix = %(convert.geometry)s # Suffix to use when converting
        crop = 10x20+0+0 # Geometry to crop

[gimp]
        exec = gimp # Executable to use
        script_file = %(ada.home)s%(ada.file_separator)sAntImports%(ada.file_separator)sxcftopng.scm

[pdfnup]
        exec = pdfnup # Executable to use
        nup_option = 1x2 # Option to print n up

[ps2pdf]
        exec = ps2pdf # Executable to use
        extra_args = option option # Anything here is passed to exec

[msf2pdf]
        exec = soffice # Executable to use

[export]
        date_format = yyyy/MM/dd HH:mm:ss
        begin = yyy/MM/dd HH:mm:ss # Start of enabled window
        end = yyy/MM/dd HH:mm:ss # End of enabled window
        open = True # It is considered for export (general enable)
        profile_revision = r1 r2 r3

[gotodir]
        files = d1 d2 # Space separated lists of directories to recur
        export_to = Dir to overwrite export.dst_dir
        targets = t1 t2 # List of rules to execute in the remote dir

# [copy]

[exercisesubmit]
        style_file = %(ada.home)s/ADA_Styles/ExerciseSubmit.xsl
        submit_style_file = %(ada.home)s/ADA_Styles/AsapSubmit.xsl
        output_format = html
        extra_args = arg1 arg2 # Args passed directly to xslt
        multilingual_files = file1 # Space separated lists of multilingual files
        master_style = style.xls # Space separated list of styles to merge

[pdflatex]
        exec = pdflatex # Executable to use
        extra_args = opt1 opt2 # To be passed directly to the executable

[latex]
        exec = latex # Executable to use
        extra_args = opt1 opt2 # To be passed directly to the executable

[dvips]
        exec = dvips # Executable to use

[dblatex]
        exec = dblatex # Executable to use
        multilingual_files = f1 f2 # Space separated list of source files
        extra_args = org1 org2 # Options passed directly to the exec
        extra_xsltproc_args = arg1 arg2 # Options passed directly to xsltproc
        profile_lang = en # Profile lang to pass to xsltproc
        compliant_mode = ???

[exam]
        equation_dir = equations # Directory to leave the equation files
        output_format = html # Extension for the result file
        style_file = %(ada.home)s/ADA_Styles/Exam.xsl # Style to use

        extra_args = opt1 opt2 # Options to pass to xsltproc
        file = file1 # Exam file
        multilingual_file = file1 # Multilingual file

[testexam]
        debug = %(ada.debug_level)s # Debug level inherited from ada section
        equation_dir = equations # Directory to leave the equations
        output_format = html # Extension of the result file
        style_file = %(ada.home)s/ADA_Styles/Exam.xsl # Style to use

        extra_args = opt1 opt2 # Options to pass to xsltproc
        file = file1 # Exam file
        multilingual_file = file1 # Multilingual file

[rss]
        debug = %(ada.debug_level)s # Debug level inherited from ada section
        output_format = _rss.xml
        style_file = %(ada.home)s/ADA_Styles/Rss.xsl
        style_file_tohtml = %(ada.home)s/ADA_Styles/RssToHtml.xsl

        extra_args = opt1 opt2 # Arguments to pass to xsltproc
        multilingual_files = file1 file2 # Space separated list of
                                           # multilingual files

# [clean]

# ##############################################################################
#
# Ohter ideas for sections in the Properties.txt file
#
#
# [group]
#         targets = t1 t2 t4 # Group of targets

# [group.name]
#         targets = t1 t2 t4 # Named Group of targets


# # This one I don't have it clear in my mind yet...
# [include]
#         file = f1 # file to include
