#!/bin/bash
#
# Copyright (C) 2008 Carlos III University of Madrid
# This file is part of the ADA: Agile Distributed Authoring Toolkit

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor
# Boston, MA  02110-1301, USA.

#
# Script to compare the following parameters:
#
# $1: ada.exact.version: required exact version (if any)
# $2: ada.minimum.version: required minimum version (if any)
# $3: ada.maximum.version: required maximum version (if any)
#
# The script only prints the result true/false of the formula:
#
# (ada.exact.version is empty or IDENTICAL to ada.version)
#  and
# (ada.minimum.version is empty or LESS THAN OR EQUAL to ada.version)
# and
# (ada.maximum.version is empty or GREATER THAN OR EQUAL to ada.version)
#

cygwin=false;
case "`uname`" in
    CYGWIN*) cygwin=true ;;
esac

# Get basic variables
basedir=$PWD

ADA_HOME=`dirname $0`/..
if [ $cygwin = "true" ]; then
    # If within cygwin, pahts need to be manipulated for a correct ant
    # invocation

    # If ADA_HOME is empty, bomb out with msg
    ada_check_home

    ADA_HOME=`cygpath --windows $ADA_HOME`
    ADA_HOME=${ADA_HOME//\\/\\\\}
fi

# If ADA_HOME is empty, bomb out with msg
if [ "$ADA_HOME" = "" ]; then
   echo "ERROR: Unable to set variable ADA_HOME"
fi

# Slurp some additional functions
source $ADA_HOME/bin/functions.bash
ada_version

# Get the integer for the current, exact, minimum and maximum versions
ada_current_integer=$(version_to_integer $ada_version)
ada_exact_integer=$(version_to_integer $1)
ada_minimum_integer=$(version_to_integer $2)
ada_maximum_integer=$(version_to_integer $3)

# If no value is given, set them to the current version
if [ "$ada_exact_integer" = "" ]; then
  ada_exact_integer=$ada_current_integer
fi
if [ "$ada_maximum_integer" = "" ]; then
  ada_maximum_integer=$ada_current_integer
fi
if [ "$ada_minimum_integer" = "" ]; then
  ada_minimum_integer=$ada_current_integer
fi

# If exact is identical, minimum lower or equal, and maximum greater or equal to
# current, result is true
if [ \( "$ada_exact_integer" -eq "$ada_current_integer" \) -a \
     \( "$ada_minimum_integer" -le "$ada_current_integer" \) -a \
     \( "$ada_maximum_integer" -ge "$ada_current_integer" \) ]; then
   echo "true"
else
   echo "false"
fi
