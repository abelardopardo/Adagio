#!/usr/bin/python
# -*- coding: UTF-8 -*-#
#
# Copyright (C) 2010 Carlos III University of Madrid
# This file is part of the Adagio: Agile Distributed Authoring Toolkit

# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor
# Boston, MA  02110-1301, USA.
#
# Author: Abelardo Pardo (abelardo.pardo@uc3m.es)
#

import sys, locale, re, os

# Get locale info and infer language from it
locale = locale.getdefaultlocale()[0]
m = re.match('^([^_]+)_.+$', locale)
if m != None:
    localePrefix = m.group(1)
else:
    localePrefix = 'en'

dictionary_en = {
    'checking_configuration': 'Checking Adagio configuration',
    'lxml_not_installed': 
    'Python library lxml is not installed. Check configuration',
    }

dictionary_es = {
  'checking_configuration': 'Comprobando la configuración de Adagio',
  'lxml_not_installed': 
  'La biblioteca lxml no está instalada. Comprueba la configuración.',
}

all_dicts = { 'en': dictionary_en,
	      'es': dictionary_es
            }

# Set the global dicionary
dictionary = all_dicts.get(localePrefix)
if dictionary == None:
    dictionary = dictionary_en

print
print dictionary.get('checking_configuration')
print

#
# Verify that the lxml library is installed
#
print ' - lxml: ',
try:
    from lxml import etree as etree
except ImportError:
    print
    print '***', dictionary.get('lxml_not_installed')
    sys.exit(1)
print 'OK'

#
# Check ada.home directory
#
print ' - Adagio directory: ',
adaDir = os.path.dirname(__file__)
adaDir = os.path.abspath(os.path.join(adaDir, '..'))

sys.exit(0)
