<?xml version="1.0" encoding="UTF-8"?>

<project name="Rules to transform dvi equations to bitmaps" default="dvi2bitmap">

  <!--
      Given the following properties:

      dvi2bitmap.src.dir: directory from where to take the source files
      dvi2bitmap.files: comma/space separated list of files to process

      Produce ??
  -->

  <import file="InitialCheck.xml"/>

  <property name="dvi2bitmap.exec"        value="dvi2bitmap"/>

  <ada.set.execution.possible ADA.EXECUTABLE.NAME="${dvi2bitmap.exec}"/>

  <!-- Private properties -->
  <property name="dvi2bitmap.debug.level"    value="${ada.debug.level}"/>
    
  <target name="dvi2bitmap.init" depends="ada.init" if="dvi2bitmap.execution.possible">
    <!-- Public Property definition -->
    <property name="dvi2bitmap.src.dir"     value="${basedir}"/>
    <property name="dvi2bitmap.output.type" value="png"/>
    <property name="dvi2bitmap.args"        value="--magnification=5 --scale=5"/>
    <property name="dvi2bitmap.extra.args"  value=""/>
    <property name="dvi2bitmap.files"       value=""/>
    
    <!-- Define two properties containing the absolute src and dst paths -->
    <pathconvert property="dvi2bitmap.abssrc.dir" pathsep=" ">
      <path location="${dvi2bitmap.src.dir}"/>
    </pathconvert>
    
    <!-- Source files to be processed by dvi2bitmap (fileset to allow wildcards) -->
    <fileset id="dvi2bitmap.fileset" dir="${dvi2bitmap.abssrc.dir}"
	     includes="__bogus__file__name ${dvi2bitmap.files}"/>

    <!-- Obtain the filelist with the source files to see if it is empty -->
    <pathconvert property="dvi2bitmap.source.filelist.property" pathsep=" ">
      <fileset refid="dvi2bitmap.fileset"/>
    </pathconvert>

    <!-- Condition to enable/disable the rest of the execution -->
    <condition property="dvi2bitmap.check">
      <!-- 
	   There must be some files in the fileset (after regexp expansion) 
      -->
      <not>
	<equals arg1="${dvi2bitmap.source.filelist.property}" arg2="" trim="true"/>
      </not>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="${dvi2bitmap.debug.level}">  dvi2bitmap.check              = "${dvi2bitmap.check}"
  dvi2bitmap.execution.possible = ${dvi2bitmap.execution.possible}</echo>

  </target>

  <!-- Regular target. It is executed if the check property is true -->
  <target name="dvi2bitmap.processing" depends="dvi2bitmap.init"
	  if="dvi2bitmap.check" description="Translate the files to PNGs">

    <echo>dvi2bitmap.processing       RUN</echo>
    <echo level="${dvi2bitmap.debug.level}">${basedir}</echo>

    <!-- Execute the command. -->
    <apply dir="${dvi2bitmap.abssrc.dir}" parallel="false" 
	   append="yes" failonerror="true" executable="${dvi2bitmap.exec}" 
	   output="build.out">
      <arg value="-T"/>
      <arg value="${dvi2bitmap.output.type}"/>
      <arg line="${dvi2bitmap.args}"/>
      <arg line="${dvi2bitmap.extra.args}"/>
      <srcfile/>
      <fileset refid="dvi2bitmap.fileset"/>
    </apply>    
  </target>

  <!-- Clean files produced by dvi2bitmap -->
  <target name="dvi2bitmap.clean" depends="dvi2bitmap.init"
	  if="dvi2bitmap.check" description="Remove files produced by dvi2bitmap">

    <echo>dvi2bitmap.clean       RUN</echo>
    <echo level="${dvi2bitmap.debug.level}">${basedir}</echo>

  </target>

  <!-- Dump the properties defined in this script -->
  <target name="dvi2bitmap.dump.properties" depends="dvi2bitmap.init">
    <echo level="${dvi2bitmap.debug.level}"> ------ dvi2bitmap properties ----
    dvi2bitmap.exec       ="${dvi2bitmap.exec}"
    dvi2bitmap.abssrc.dir ="${dvi2bitmap.abssrc.dir}"
    dvi2bitmap.args       ="${dvi2bitmap.args}"
    dvi2bitmap.extra.args ="${dvi2bitmap.extra.args}"
    dvi2bitmap.files      ="${dvi2bitmap.files}"</echo>
  </target>

  <target name="dvi2bitmap.report.YES" depends="dvi2bitmap.init"
	  if="dvi2bitmap.execution.possible">
    <echo>dvi2bitmap             |     *     |</echo>
  </target>

  <target name="dvi2bitmap.report.NO" depends="dvi2bitmap.init"
	  unless="dvi2bitmap.execution.possible">
    <echo>dvi2bitmap             |           |     * (install ${dvi2bitmap.exec})</echo>
  </target>

  <target name="dvi2bitmap.report" depends="dvi2bitmap.report.YES,
				      dvi2bitmap.report.NO"/>

  <!-- If entering through this target, build.out is deleted -->
  <target name="dvi2bitmap" depends="dvi2bitmap.init, initial.delete.build.out, dvi2bitmap.processing"/>
</project>
