<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (C) 2008 Carlos III University of Madrid
  This file is part of the ADA: Agile Distributed Authoring Toolkit

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor
  Boston, MA  02110-1301, USA.

-->

<project name="Invoke an additional ant build file" default="extraant">
  <description>
    Executes a target in an ANT build file. This is to provide the opportunity
    to include any additional and arbitrary processing in a directory.
  </description>

  <import file="InitialCheck.xml"/>

  <!-- Private properties -->
  <property name="extraant.debug.level"    value="${ada.debug.level}"
	    description="Debug level to apply to these rules (see ada.debug.level)"/>

  <target name="extraant.init" depends="ada.init">
    <!-- Public Property definition -->
    <property name="extraant.src.dir"          value="${basedir}"
	      description="Directory where the ANT file is taken"/>
    <property name="extraant.file"             value="build.xml"
	      description="Ant file containing the additional rules to apply"/>
    <property name="extraant.pretarget"        value=""
	      description="The target to be executed BEFORE all ADA targets &#10;#
except copyfiles and subrecursive."/>
    <property name="extraant.posttarget"       value=""
	      description="The target to be executed AFTER all ADA targets &#10;#
except export."/>
    <property name="extraant.pretarget.clean"  value=""
	      description="The cleaning target to be executed BEFORE all ADA targets &#10;#
except export.clean."/>
    <property name="extraant.posttarget.clean" value=""
	      description="The target to be executed AFTER all ADA targets &#10;#
except copyfiles.clean and subrecursive.clean."/>
    
    <!-- Private properties -->
    <property name="extraant.target"         value=""/>
    
    <!-- Define a property containing the absolute src paths -->
    <pathconvert property="extraant.abssrc.dir" pathsep=" ">
      <path location="${extraant.src.dir}"/>
    </pathconvert>
    
    <!-- Condition to enable/disable the execution of the target -->
    <condition property="extraant.check">
      <and>
	<!-- Target cannot be empty -->
	<not><equals arg1="${extraant.target}" arg2="" trim="true"/></not>
	<available file="${extraant.abssrc.dir}${file.separator}${extraant.file}"/>
      </and>
    </condition>
    <condition property="extraant.pretarget.check">
      <and>
	<!-- Target cannot be empty -->
	<not><equals arg1="${extraant.pretarget}" arg2="" trim="true"/></not>
	<available file="${extraant.abssrc.dir}${file.separator}${extraant.file}"/>
      </and>
    </condition>
    <condition property="extraant.posttarget.check">
      <and>
	<!-- Target cannot be empty -->
	<not><equals arg1="${extraant.posttarget}" arg2="" trim="true"/></not>
	<available file="${extraant.abssrc.dir}${file.separator}${extraant.file}"/>
      </and>
    </condition>
    <condition property="extraant.pretarget.clean.check">
      <and>
	<!-- Target cannot be empty -->
	<not><equals arg1="${extraant.pretarget.clean}" arg2="" trim="true"/></not>
	<available file="${extraant.abssrc.dir}${file.separator}${extraant.file}"/>
      </and>
    </condition>
    <condition property="extraant.posttarget.clean.check">
      <and>
	<!-- Target cannot be empty -->
	<not><equals arg1="${extraant.posttarget.clean}" arg2="" trim="true"/></not>
	<available file="${extraant.abssrc.dir}${file.separator}${extraant.file}"/>
      </and>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="${extraant.debug.level}">  extraant.check              ="${extraant.check}"
  extraant.pretarget.check    = "${extraant.pretarget.check}"
  extraant.posttarget.check   = "${extraant.posttarget.check}"</echo>

    <macrodef name="extraant.execute.invokation">
      <attribute name="EXTRAANT.EXECUTE.TARGET" />
      <sequential>
	<echo>extraant.processing         RUN</echo>
	<echo level="${extraant.debug.level}">${basedir}</echo>
	
	<ant antfile="${extraant.file}" dir="${extraant.abssrc.dir}" 
	     target="@{EXTRAANT.EXECUTE.TARGET}" inheritall="false">
	  <property name="ada.home"        value="${ada.home}"/>
	  <property name="ada.course.home.candidate" value="${ada.course.home}"/>
	</ant>
      </sequential>
    </macrodef>
  </target>

  <!-- Regular target. It is executed if the check property is true -->
  <target name="extraant.processing" depends="extraant.init"
	  if="extraant.check" 
	  description="Simply invoke the extra ant with target target">

    <extraant.execute.invokation EXTRAANT.EXECUTE.TARGET="${extraant.target}" />
  </target>

  <target name="extraant.processing.pretarget" depends="extraant.init"
	  if="extraant.pretarget.check" 
	  description="Simply invoke the extra ant with target target">

    <extraant.execute.invokation EXTRAANT.EXECUTE.TARGET="${extraant.pretarget}" />
  </target>

  <target name="extraant.processing.posttarget" depends="extraant.init"
	  if="extraant.posttarget.check" 
	  description="Simply invoke the extra ant with target target">

    <extraant.execute.invokation EXTRAANT.EXECUTE.TARGET="${extraant.posttarget}" />
  </target>

  <target name="extraant.processing.pretarget.clean" depends="extraant.init"
	  if="extraant.pretarget.clean.check" 
	  description="Simply invoke the extra ant with target target">

    <extraant.execute.invokation 
      EXTRAANT.EXECUTE.TARGET="${extraant.pretarget.clean}" />
  </target>

  <target name="extraant.processing.posttarget.clean" depends="extraant.init"
	  if="extraant.posttarget.clean.check" 
	  description="Simply invoke the extra ant with target target">

    <extraant.execute.invokation 
      EXTRAANT.EXECUTE.TARGET="${extraant.posttarget.clean}" />
  </target>

  <!-- Dump the properties defined in this script -->
  <target name="extraant.dump.properties" depends="extraant.init">
    <echo level="${extraant.debug.level}"> ------ extraant properties ----
    extraant.abssrc.dir       ="${extraant.abssrc.dir}"
    extraant.file             ="${extraant.files}"
    extraant.pretarget        ="${extraant.pretarget}"
    extraant.posttarget       ="${extraant.posttarget}"
    extraant.pretarget.clean  ="${extraant.pretarget.clean}"
    extraant.posttarget.clean ="${extraant.posttarget.clean}"</echo>
  </target>

  <!-- If entering through this target, build.out is deleted -->
  <target name="extraant" 
	  depends="initial.delete.build.out, extraant.processing"/>
</project>
