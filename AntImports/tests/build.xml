<?xml version="1.0" encoding="UTF-8"?>

<project name="Test the templates in .." default="report.test" >

  <import file="../AllTargets.xml" />
  <import file="../Xfig.xml" />
  <import file="../Inkscape.xml" />
  <import file="../Gimp.xml" />
  <import file="../Convert.xml" />
  <import file="../PDFnup.xml" />
  <import file="../Xsltproc.xml" />
  <import file="../Docbook.xml" />
  <import file="../Cleaning.xml" />

  <target name="report.test" depends="clean, test">

    <echo>
      --                  --
      -- Execution report --
      --                  --
    </echo>
    <condition property="copyfiles.ok">
      <and>
	<available file="dst/f1.txt"/>
	<available file="dst/f2.txt"/>
      </and>
    </condition>

    <antcall target="copyfiles.check.OK"/>
    <antcall target="copyfiles.check.FAIL"/>

    <condition property="xfig.ok">
      <available file="dst/hood.png"/>
    </condition>

    <antcall target="xfig.check.OK"/>
    <antcall target="xfig.check.FAIL"/>

    <condition property="inkscape.ok">
      <available file="dst/hood.png"/>
    </condition>

    <antcall target="inkscape.check.OK"/>
    <antcall target="inkscape.check.FAIL"/>

    <condition property="gimp.ok">
      <and>
	<available file="src/books.png"/>
	<available file="src/cronometro.png"/>
      </and>
    </condition>

    <antcall target="gimp.check.OK"/>
    <antcall target="gimp.check.FAIL"/>

    <condition property="convert.ok">
      <and>
	<available file="dst/agenda.16x16.png"/>
	<available file="dst/attention.16x16.png"/>
	<available file="dst/agenda.32x32.png"/>
	<available file="dst/attention.32x32.png"/>
      </and>
    </condition>

    <antcall target="convert.check.OK"/>
    <antcall target="convert.check.FAIL"/>

    <condition property="pdfnup.ok">
      <and>
	<available file="src/SUB_notes.pdf"/>
	<available file="dst/SUB_notes-1x2.pdf"/>
      </and>
    </condition>

    <antcall target="pdfnup.check.OK"/>
    <antcall target="pdfnup.check.FAIL"/>

    <condition property="xsltproc.ok">
      <and>
	<available file="src/forxsltproc.xml"/>
	<available file="src/forxsltproc2.xml"/>
	<available file="dst/forxsltproc.html"/>
      </and>
    </condition>

    <antcall target="xsltproc.check.OK"/>
    <antcall target="xsltproc.check.FAIL"/>

    <condition property="docbook.ok">
      <and>
	<available file="${docbook.src.dir}/docbooksrc.xml"/>
	<available file="${docbook.dst.dir}/docbooksrc.html"/>
      </and>
    </condition>

    <antcall target="docbook.check.OK"/>
    <antcall target="docbook.check.FAIL"/>

    <antcall target="clean" />
    <echo>
      --              --
      -- Clean report --
      --              --
    </echo>
    <condition property="copyfiles.clean.ok">
      <and>
	<not><available file="dst/f1.txt"/></not>
	<not><available file="dst/f2.txt"/></not>
      </and>
    </condition>

    <antcall target="copyfiles.check.CLEAN.OK"/>
    <antcall target="copyfiles.check.CLEAN.FAIL"/>

    <condition property="xfig.clean.ok">
      <and>
	<not><available file="dst/hood.png"/></not>
      </and>
    </condition>

    <antcall target="xfig.check.CLEAN.OK"/>
    <antcall target="xfig.check.CLEAN.FAIL"/>

    <condition property="inkscape.clean.ok">
      <and>
	<not><available file="dst/hood.png"/></not>
      </and>
    </condition>

    <antcall target="inkscape.check.CLEAN.OK"/>
    <antcall target="inkscape.check.CLEAN.FAIL"/>

    <condition property="gimp.clean.ok">
      <and>
	<not><available file="src/books.png"/></not>
	<not><available file="src/cronometro.png"/></not>
      </and>
    </condition>

    <antcall target="gimp.check.CLEAN.OK"/>
    <antcall target="gimp.check.CLEAN.FAIL"/>

    <condition property="convert.clean.ok">
      <and>
	<not><available file="dst/agenda.16x16.png"/></not>
	<not><available file="dst/attention.16x16.png"/></not>
	<not><available file="dst/agenda.32x32.png"/></not>
	<not><available file="dst/attention.32x32.png"/></not>
      </and>
    </condition>

    <antcall target="convert.check.CLEAN.OK"/>
    <antcall target="convert.check.CLEAN.FAIL"/>

    <condition property="pdfnup.clean.ok">
      <and>
	<available file="src/SUB_notes.pdf"/>
	<not><available file="dst/SUB_notes-1x2.pdf"/></not>
      </and>
    </condition>

    <antcall target="pdfnup.check.CLEAN.OK"/>
    <antcall target="pdfnup.check.CLEAN.FAIL"/>

    <condition property="xsltproc.clean.ok">
      <and>
	<available file="src/SUB_notes.pdf"/>
	<not><available file="dst/forxsltproc.html"/></not>
      </and>
    </condition>

    <antcall target="xsltproc.check.CLEAN.OK"/>
    <antcall target="xsltproc.check.CLEAN.FAIL"/>

    <condition property="docbook.clean.ok">
      <and>
	<available file="src/docbooksrc.xml"/>
	<not><available file="dst/docbooksrc.html"/></not>
      </and>
    </condition>

    <antcall target="docbook.check.CLEAN.OK"/>
    <antcall target="docbook.check.CLEAN.FAIL"/>

  </target>

  <target name="test" depends="initial.check">
    <echo>Testing all targets in build.xml</echo>

    <antcall target="test.auxfile" />

    <antcall target="test.xfig" />

    <antcall target="test.inkscape" />

    <antcall target="test.gimp" />

    <antcall target="test.convert" />

    <antcall target="test.pdfnup" />

    <antcall target="test.xsltproc" />

    <antcall target="test.docbook" />

  </target>

  <target name="test.auxfile">
    <antcall target="copyfiles.processing" inheritAll="false"/>
  </target>

  <target name="test.xfig">
    <antcall target="xfig.processing" inheritAll="false"/>
  </target>

  <target name="test.inkscape">
    <antcall target="inkscape.processing" inheritAll="false"/>
  </target>

  <target name="test.gimp" if="ada.os.family.unix">
    <antcall target="gimp.processing" inheritAll="false" />
  </target>

  <target name="test.convert">
    <antcall target="convert.processing" inheritAll="false">
      <param name="convert.geometry" value="16x16"/>
    </antcall>
    <antcall target="convert.processing" inheritAll="false">
      <param name="convert.geometry" value="32x32"/>
    </antcall>
  </target>

  <target name="test.pdfnup">
    <antcall target="pdfnup.processing" inheritAll="false" />
  </target>

  <target name="test.xsltproc">
    <antcall target="xsltproc.processing" inheritAll="false" >
      <param name="xsltproc.extra.args"
	     value="--stringparam param1 'hola que tal'
		    --stringparam param2 'pascual que tal'"/>
    </antcall>
  </target>

  <target name="test.docbook">
    <antcall target="docbook.processing" inheritAll="false"/>
  </target>

  <target name="copyfiles.check.OK" if="copyfiles.ok">
    <echo>  * Copyfiles test:                         OK</echo>
  </target>

  <target name="copyfiles.check.FAIL" unless="copyfiles.ok">
    <echo>  * Copyfiles test:                       FAILED</echo>
  </target>

  <target name="xfig.check.OK" if="xfig.ok">
    <echo>  * Xfig test:                              OK</echo>
  </target>

  <target name="xfig.check.FAIL" unless="xfig.ok">
    <echo>  * Xfig test:                            FAILED</echo>
  </target>

  <target name="inkscape.check.OK" if="inkscape.ok">
    <echo>  * Inkscape test:                          OK</echo>
  </target>

  <target name="inkscape.check.FAIL" unless="inkscape.ok">
    <echo>  * Inkscape test:                        FAILED</echo>
  </target>

  <target name="gimp.check.OK" if="gimp.ok">
    <echo>  * Gimp test:                              OK</echo>
  </target>

  <target name="gimp.check.FAIL" unless="gimp.ok">
    <echo>  * Gimp test:                            FAILED</echo>
  </target>

  <target name="convert.check.OK" if="convert.ok">
    <echo>  * Convert test:                           OK</echo>
  </target>

  <target name="convert.check.FAIL" unless="convert.ok">
    <echo>  * Convert test:                         FAILED</echo>
  </target>

  <target name="pdfnup.check.OK" if="pdfnup.ok">
    <echo>  * Pdfnup test:                            OK</echo>
  </target>

  <target name="pdfnup.check.FAIL" unless="pdfnup.ok">
    <echo>  * Pdfnup test:                          FAILED</echo>
  </target>

  <target name="xsltproc.check.OK" if="xsltproc.ok">
    <echo>  * Xsltproc test:                          OK</echo>
  </target>

  <target name="xsltproc.check.FAIL" unless="xsltproc.ok">
    <echo>  * Xsltproc  test:                       FAILED</echo>
  </target>

  <target name="docbook.check.OK" if="docbook.ok">
    <echo>  * Docbook test:                           OK</echo>
  </target>

  <target name="docbook.check.FAIL" unless="docbook.ok">
    <echo>  * Docbook test:                         FAILED</echo>
  </target>

  <target name="copyfiles.check.CLEAN.OK" if="copyfiles.clean.ok">
    <echo>  * Copyfiles test:                         OK</echo>
  </target>

  <target name="copyfiles.check.CLEAN.FAIL" unless="copyfiles.clean.ok">
    <echo>  * Copyfiles test:                       FAILED</echo>
  </target>

  <target name="xfig.check.CLEAN.OK" if="xfig.clean.ok">
    <echo>  * Xfig test:                              OK</echo>
  </target>

  <target name="xfig.check.CLEAN.FAIL" unless="xfig.clean.ok">
    <echo>  * Xfig test:                            FAILED</echo>
  </target>

  <target name="inkscape.check.CLEAN.OK" if="inkscape.clean.ok">
    <echo>  * Inkscape test:                          OK</echo>
  </target>

  <target name="inkscape.check.CLEAN.FAIL" unless="inkscape.clean.ok">
    <echo>  * Inkscape test:                        FAILED</echo>
  </target>

  <target name="gimp.check.CLEAN.OK" if="gimp.clean.ok">
    <echo>  * Gimp test:                              OK</echo>
  </target>

  <target name="gimp.check.CLEAN.FAIL" unless="gimp.clean.ok">
    <echo>  * Gimp test:                            FAILED</echo>
  </target>

  <target name="convert.check.CLEAN.OK" if="convert.clean.ok">
    <echo>  * Convert test:                           OK</echo>
  </target>

  <target name="convert.check.CLEAN.FAIL" unless="convert.clean.ok">
    <echo>  * Convert test:                         FAILED</echo>
  </target>

  <target name="pdfnup.check.CLEAN.OK" if="pdfnup.clean.ok">
    <echo>  * Pdfnup test:                            OK</echo>
  </target>

  <target name="pdfnup.check.CLEAN.FAIL" unless="pdfnup.clean.ok">
    <echo>  * Pdfnup test:                          FAILED</echo>
  </target>

  <target name="xsltproc.check.CLEAN.OK" if="xsltproc.clean.ok">
    <echo>  * Xsltproc test:                          OK</echo>
  </target>

  <target name="xsltproc.check.CLEAN.FAIL" unless="xsltproc.clean.ok">
    <echo>  * Xsltproc  test:                       FAILED</echo>
  </target>

  <target name="docbook.check.CLEAN.OK" if="docbook.clean.ok">
    <echo>  * Docbook test:                           OK</echo>
  </target>

  <target name="docbook.check.CLEAN.FAIL" unless="docbook.clean.ok">
    <echo>  * Docbook test:                        FAILED</echo>
  </target>

  <target name="clean.recursive" depends="initial.check">
    <antcall target="convert.clean" inheritall="false">
      <param name="convert.geometry" value="32x32"/>
      <reference refid="convert.filelist" torefid="convert.filelist"/>
    </antcall>
    <antcall target="convert.clean" inheritall="false">
      <param name="convert.geometry" value="16x16"/>
      <reference refid="convert.filelist" torefid="convert.filelist"/>
    </antcall>
  </target>
</project>
