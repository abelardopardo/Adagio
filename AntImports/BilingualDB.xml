<?xml version="1.0" encoding="UTF-8"?>

<project name="Apply stylesheet to bilingual docbook files" default="bilingualdb">

  <!--
      Given the following properties:

      bilingualdb.src.dir: directory from where to take the source files
      bilingualdb.dst.dir: directory where the produced files are stored
      bilingualdb.style.file: Style file to be used
      bilingualdb.output.format: Extension of the output file
      bilingualdb.files: Comma separate list of files to process

      Apply the stylefile to the files in bilingualdb.files first with
      profile.lang in spanish, and then in english
  -->

  <!-- Checks for availability of different binaries -->
  <import file="Docbook.xml"/>

  <!-- Property definition -->
  <property name="bilingualdb.src.dir"       value="."/>
  <property name="bilingualdb.dst.dir"       value="${bilingualdb.src.dir}"/>
  <property name="bilingualdb.output.format" value=".html"/>
  <property name="bilingualdb.extra.args"     value=""/>
  <property name="bilingualdb.files"         value=""/>
  <property name="bilingualdb.style.file" 
	    value="${ada.home}/XslStyles/DocbookProfile.xsl"/>

  <!-- Private properties -->
  <property name="bilingualdb.debug.level"    value="${ada.debug.level}"/>

  <!-- Preliminary target to verify that certain minimum conditions hold before
       executing the regular targets. -->
  <target name="bilingualdb.check.values" 
	  depends="initial.check, bilingualdb.dump.properties">
    
    <!-- Condition to enable/disable the rest of the execution -->
    <condition property="bilingualdb.check">
      <and>
	<!-- The src.dir needs to be non-empty. -->
        <not><equals arg1="${bilingualdb.src.dir}" arg2="" trim="true"/></not>
	<available file="${bilingualdb.src.dir}"/> 
	<!-- There must be some files defined -->
	<not><equals arg1="${bilingualdb.files}" arg2="" trim="true"/></not>
	<!-- Require a non-empty dst.dir -->
        <not><equals arg1="${bilingualdb.dst.dir}" arg2="" trim="true"/></not>
	<!-- Require a non-empty and available stylesheet -->
        <not><equals arg1="${bilingualdb.style.file}" arg2="" trim="true"/></not>
	<available file="${bilingualdb.style.file}"/>
      </and>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="${bilingualdb.debug.level}">    bilingualdb.check          = "${bilingualdb.check}"</echo>
  </target>

  <!-- Target to notify that the regular target has not been executed. This is
  to notify the user -->
  <target name="bilingualdb.processing.NOT" unless="bilingualdb.check">
    <echo level="${bilingualdb.debug.level}">bilingualdb.processing      ---</echo>
    <echo level="${bilingualdb.debug.level}">${basedir}</echo>
  </target>

  <!-- Invoke xsltprocessing -->
  <target name="bilingualdb.processing" 
	  depends="bilingualdb.check.values, bilingualdb.processing.NOT"
	  if="bilingualdb.check" 
	  description="Call the xsltproc with the given style">

    <echo>bilingualdb.processing      CALL(xsltproc.processing ES)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${bilingualdb.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${bilingualdb.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${bilingualdb.style.file}"/>
      <param name="xsltproc.output.format" value="_es${bilingualdb.output.format}"/>
      <param name="xsltproc.files"         value="${bilingualdb.files}"/>
      <param name="xsltproc.extra.args"    value="${bilingualdb.extra.args} --stringparam profile.lang es"/>
    </antcall>

    <echo>bilingualdb.processing      END(xsltproc.processing ES)</echo>
    <echo>bilingualdb.processing      CALL(xsltproc.processing EN)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${bilingualdb.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${bilingualdb.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${bilingualdb.style.file}"/>
      <param name="xsltproc.output.format" value="_en${bilingualdb.output.format}"/>
      <param name="xsltproc.files"         value="${bilingualdb.files}"/>
      <param name="xsltproc.extra.args"    value="${bilingualdb.extra.args} --stringparam profile.lang en"/>
    </antcall>
    <echo>bilingualdb.processing      END(xsltproc.processing EN)</echo>
  </target>

  <!-- Target to notify that the regular target has not been executed. This is
  to notify the user -->
  <target name="bilingualdb.clean.NOT" unless="bilingualdb.check">
    <echo level="${bilingualdb.debug.level}">bilingualdb.clean           ---</echo>
    <echo level="${bilingualdb.debug.level}">${basedir}</echo>
  </target>

  <!-- Clean files produced by bilingualdb -->
  <target name="bilingualdb.clean" 
	  depends="bilingualdb.check.values, bilingualdb.clean.NOT"
	  if="bilingualdb.check"
	  description="Remove files produced by bilingualdb">

    <echo>bilingualdb.clean           CALL(xsltproc.clean ES)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${bilingualdb.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${bilingualdb.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${bilingualdb.style.file}"/>
      <param name="xsltproc.output.format" value="_es${bilingualdb.output.format}"/>
      <param name="xsltproc.files"         value="${bilingualdb.files}"/>
    </antcall>

    <echo>bilingualdb.clean           END(xsltproc.clean ES)</echo>
    <echo>bilingualdb.clean           CALL(xsltproc.clean EN)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"         value="${bilingualdb.src.dir}"/>
      <param name="xsltproc.dst.dir"         value="${bilingualdb.dst.dir}"/>
      <param name="xsltproc.style.file"      value="${bilingualdb.style.file}"/>
      <param name="xsltproc.output.format"   value="_en${bilingualdb.output.format}"/>
      <param name="xsltproc.files"           value="${bilingualdb.files}"/>
    </antcall>

    <echo>bilingualdb.clean           END(xsltproc.clean EN)</echo>
  </target>

  <target name="bilingualdb.dump.properties" depends="initial.check">
    <echo level="${bilingualdb.debug.level}"> ------ Bilingualdb properties ----
    bilingualdb.src.dir       ="${bilingualdb.src.dir}"
    bilingualdb.dst.dir       ="${bilingualdb.dst.dir}"
    bilingualdb.style.file    ="${bilingualdb.style.file}"
    bilingualdb.output.format ="${bilingualdb.out.format}"
    bilingualdb.files         ="${bilingualdb.files}"</echo>
  </target>

  <!-- If entering through this target, build.out is deleted -->
  <target name="bilingualdb" depends="initial.delete.build.out, bilingualdb.processing"/>
</project>
