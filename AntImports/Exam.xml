<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (C) 2008 Carlos III University of Madrid
  This file is part of the ADA: Agile Distributed Authoring Toolkit

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor
  Boston, MA  02110-1301, USA.

-->

<project name="Exam processing to create heading" default="exam">
  <description>
    Given one single file either in exam.file or exam.multilingual.file, 
    process it to obtain the HTML rendering of the file as an exam, with 
    logos, name box, instructions, etc.
  </description>

  <import file="Latex.xml"/>
  <import file="Dvi2bitmap.xml"/>
  <import file="Xsltproc.xml"/>
  
  <!-- Private properties -->
  <property name="exam.debug.level"    value="${ada.debug.level}"
	    description="Debug level to apply to these rules (see ada.debug.level)"/>
    
  <target name="exam.init" depends="ada.init">
    <!-- Public Property definition -->
    <property name="exam.src.dir"        value="${basedir}"
	      description="Directory where the sources are taken"/>
    <property name="exam.dst.dir"        value="${exam.src.dir}"
	      description="Directory where the produced files are created"/>
    <property name="exam.equation.dir"   value="equations"
	      description="Directory where equation image files are created"/>
    <property name="exam.output.format"  value=".html"
	      description="Output file has the same name as the source but the
extension is replaced &#10;# by this value"/>
    <property name="exam.extra.args"     value=""
	      description="Extra arguments to pass to the XSLT processor"/>
    <property name="exam.file"           value=""
	      description="Source file name (no path, it is xsltproc.src.dir)"/>
    <property name="exam.multilingual.file" value=""
	      description="Source file name (no path) to process in
multilingual mode"/>
    <property name="exam.style.file"     value="${ada.home}/ADA_Styles/Exam.xsl"
	      description="Full path to the stylesheet file to apply"/>
    
    <!-- Define two properties containing the absolute src and dst paths -->
    <pathconvert property="exam.abssrc.dir" pathsep=" ">
      <path location="${exam.src.dir}"/>
    </pathconvert>
    <pathconvert property="exam.absdst.dir" pathsep=" ">
      <path  location="${exam.dst.dir}"/>
    </pathconvert>
    
    <!-- Source file to be processed by exam -->
    <filelist id="exam.filelist" dir="${exam.abssrc.dir}"
	      files="${exam.file}"/>
    
    <!-- Multilingual source file to be processed by exam -->
    <filelist id="exam.multilingual.filelist" dir="${exam.abssrc.dir}"
	      files="${exam.multilingual.file}"/>

    <!-- Obtain the filelist with the source file to see if it is empty -->
    <pathconvert property="exam.source.filelist.property" pathsep=" ">
      <filelist refid="exam.filelist"/>
      <filelist refid="exam.multilingual.filelist"/>
    </pathconvert>

    <!-- Condition to enable/disable the rest of the execution -->
    <condition property="exam.check">
      <and>
	<!-- 
	     There must be some files in the fileset (after regexp expansion) 
	-->
	<not>
	  <equals arg1="${exam.source.filelist.property}" arg2="" trim="true"/>
	</not>
	<!-- At least one of the variable must be empty -->
	<or>
	  <equals arg1="${exam.file}" arg2="" trim="true"/>
	  <equals arg1="${exam.multilingual.file}" arg2="" trim="true"/>
	</or>
      </and>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="${exam.debug.level}">  exam.check              = "${exam.check}"</echo>
  </target>

  <!-- Process the file through the four steps until the exam is produced -->
  <target name="exam.processing" depends="exam.init" if="exam.check" 
	  description="Process the exam file">

    <echo>exam.processing (Step 1a/4) CALL(xsltproc.processing)</echo>

    <!-- Call multilingual file production -->
    <antcall target="xsltproc.multilingual.processing" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files" value="${exam.multilingual.file}"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${exam.extra.args}"/>
    </antcall>

    <echo>exam.processing             END(xsltproc.processing)</echo>

    <echo>exam.processing (Step 1b/4) CALL(xsltproc.processing)</echo>

    <!-- Call multilingual solution production -->
    <antcall target="xsltproc.multilingual.processing" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"
	     value="${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam ada.testquestions.include.solutions yes 
		    ${exam.extra.args}"/>
    </antcall>

    <echo>exam.processing             END(xsltproc.processing)</echo>

    <echo>exam.processing (Step 1c/4) CALL(xsltproc.processing)</echo>

    <!-- Call multilingual professor guide production -->
    <antcall target="xsltproc.multilingual.processing" inheritAll="false">
      <param name="xsltproc.src.dir" value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir" value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file"    
	     value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingualfiles"
	     value="${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_pguide.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam professorguide.include.guide yes
		    --stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    ${exam.extra.args}"/>
    </antcall>

    <echo>exam.processing             END(xsltproc.processing)</echo>

    <echo>exam.processing (Step 2a/4) CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"      value="${exam.file} ${exam.multilingual.file}"/>
      <param name="xsltproc.extra.args" 
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${exam.extra.args}"/>
    </antcall>

    <echo>exam.processing             END(xsltproc.processing)</echo>

    <echo>exam.processing (Step 2b/4) CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${exam.file}  ${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam ada.testquestions.include.solutions yes 
		    ${exam.extra.args}"/>
    </antcall>

    <echo>exam.processing             END(xsltproc.processing)</echo>

    <echo>exam.processing (Step 2c/4) CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${exam.file} ${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_pguide.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam professorguide.include.guide yes
		    --stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    ${exam.extra.args}"/>
    </antcall>

    <echo>exam.processing             END(xsltproc.processing)</echo>

    <echo>exam.processing (Step 3/4)  CALL(latex.processing)</echo>

    <!-- Call latex -->
    <antcall target="latex.processing" inheritAll="false">
      <param name="latex.src.dir"       value="${exam.dst.dir}"/>
      <param name="latex.dst.dir"       value="${exam.dst.dir}"/>
      <param name="latex.files"         value="tex-math-equations.tex"/>
      <param name="latex.extra.args"    value="-interaction=nonstopmode"/>
    </antcall>

    <echo>exam.processing             END(latex.processing)</echo>

    <echo>exam.processing (Step 4/4)  CALL(dvi2bitmap.processing)</echo>

    <mkdir dir="${exam.absdst.dir}${file.separator}${exam.equation.dir}"/>

    <!-- Call dvi2bitmap -->
    <antcall target="dvi2bitmap.processing" inheritAll="false">
      <param name="dvi2bitmap.src.dir"       value="${exam.dst.dir}"/>
      <param name="dvi2bitmap.dst.dir"       value="${exam.dst.dir}"/>
      <param name="dvi2bitmap.files"         value="tex-math-equations.dvi"/>
    </antcall>

    <echo>exam.processing             END(dvi2bitmap.processing)</echo>

  </target>

  <!-- Clean files produced by exam -->
  <target name="exam.clean" depends="exam.init"
	  if="exam.check" description="Remove files produced by exam">

    <echo>exam.clean                  CALL(dvi2bitmap.clean)</echo>

    <!-- Call dvi2bitmap -->
    <antcall target="dvi2bitmap.clean" inheritAll="false">
      <param name="dvi2bitmap.src.dir"       value="${exam.dst.dir}"/>
      <param name="dvi2bitmap.dst.dir"       value="${exam.dst.dir}"/>
      <param name="dvi2bitmap.files"         value="tex-math-equations.dvi"/>
    </antcall>

    <echo>exam.clean                  END(dvi2bitmap.clean)</echo>

    <echo level="${exam.debug.level}">Delete files in ${exam.equation.dir}</echo>
    <delete failonerror="false">
      <fileset dir="${exam.equation.dir}" includes="*"/>
    </delete>

    <echo level="${exam.debug.level}">Delete dir ${exam.equation.dir}</echo>
    <delete dir="${exam.equation.dir}" failonerror="false"/>

    <echo level="${exam.debug.level}">Delete missfont.log</echo>
    <delete failonerror="false" file="missfont.log"/>

    <!-- Call latex -->
    <antcall target="latex.clean" inheritAll="false">
      <param name="latex.src.dir"       value="${exam.dst.dir}"/>
      <param name="latex.dst.dir"       value="${exam.dst.dir}"/>
      <param name="latex.files"         value="tex-math-equations.tex"/>
      <param name="latex.extra.args"    value="-interaction=nonstopmode"/>
    </antcall>

    <delete failonerror="false" file="tex-math-equations.tex"/>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${exam.file} ${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_pguide.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam professorguide.include.guide yes
		    --stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    ${exam.extra.args}"/>
    </antcall>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${exam.file} ${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam ada.testquestions.include.solutions yes 
		    ${exam.extra.args}"/>
    </antcall>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"      value="${exam.file} ${exam.multilingual.file}"/>
      <param name="xsltproc.extra.args" 
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${exam.extra.args}"/>
    </antcall>

    <!-- Call Multilingual Cleaning for professor guide  -->
    <antcall target="xsltproc.multilingual.clean" inheritAll="false">
      <param name="xsltproc.src.dir" value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir" value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"
	     value="${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_pguide.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    --stringparam professorguide.include.guide yes
		    ${exam.extra.args}"/>
    </antcall>

    <!-- Call Multilingual Cleaning for the solution -->
    <antcall target="xsltproc.multilingual.clean" inheritAll="false">
      <param name="xsltproc.src.dir" value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir" value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"
	     value="${exam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    --stringparam solutions.include.guide yes 
		    --stringparam ada.testquestions.include.solutions yes 
		    ${exam.extra.args}"/>
    </antcall>

    <!-- Call Multilingual Clearning -->
    <antcall target="xsltproc.multilingual.clean" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${exam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"
	     value="${exam.multilingual.file}"/>
      <param name="xsltproc.extra.args" 
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${exam.extra.args}"/>
    </antcall>

  </target>

  <!-- Dump the properties defined in this script -->
  <target name="exam.dump.properties" depends="exam.init">
    <echo level="${exam.debug.level}"> ------ exam properties ----
    exam.abssrc.dir     ="${exam.abssrc.dir}"
    exam.absdst.dir     ="${exam.absdst.dir}"
    exam.file           ="${exam.file}"
    exam.multilingual.file ="${exam.multilingual.file}"</echo>
  </target>

  <!-- If entering through this target, build.out is deleted -->
  <target name="exam" depends="initial.delete.build.out, exam.processing"/>

</project>
