<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright (C) 2008 Carlos III University of Madrid
  This file is part of the ADA: Agile Distributed Authoring Toolkit

  This program is free software; you can redistribute it and/or
  modify it under the terms of the GNU General Public License
  as published by the Free Software Foundation; either version 2
  of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor
  Boston, MA  02110-1301, USA.

-->

<project name="Test Exam processing rules" default="testexam">
  <description>
      Given one single Docbook file in a specific format either in testexam.file
      or testexam.multilingual.file, process it to obtain two versions of the
      true/false or Multiple choice questions with the shuffled questions. It
      also produces multiple auxiliary files such as solutions, shuffle
      solutions, version with stats, etc.

      Warning: VERY specific functionality. The Docbook file must have a very
      special structure based on qandaset, qandaentry, etc.
  </description>

  <import file="Latex.xml"/>
  <import file="Dvi2bitmap.xml"/>
  <import file="Xsltproc.xml"/>

  <!-- Private properties -->
  <property name="testexam.debug.level"    value="${ada.debug.level}"
	    description="Debug level to apply to these rules (see ada.debug.level)"/>
    
  <target name="testexam.init" depends="ada.init">
    <!-- Public Property definition -->
    <property name="testexam.src.dir"        value="${basedir}"
	      description="Directory where the source is taken"/>
    <property name="testexam.dst.dir"        value="${testexam.src.dir}"
	      description="Directory where the produced files are created"/>
    <property name="testexam.equation.dir"   value="equations"
	      description="Directory where equation image files are created"/>
    <property name="testexam.output.format"  value=".html"
	      description="Output file has the same name as the source but the
extension is replaced &#10;# by this value"/>
    <property name="testexam.extra.args"     value=""
	      description="Extra arguments to pass to the XSLT processor"/>
    <property name="testexam.file"           value=""
	      description="Source file name (no path, it is xsltproc.src.dir)"/>
    <property name="testexam.multilingual.file" value=""
	      description="Source file name (no path) to process in
multilingual mode"/>
    <property name="testexam.style.file"  
	      value="${ada.home}/ADA_Styles/Exam.xsl"
	      description="Full path to the stylesheet file to apply"/>
    
    <!-- Define two properties containing the absolute src and dst paths -->
    <pathconvert property="testexam.abssrc.dir" pathsep=" ">
      <path location="${testexam.src.dir}"/>
    </pathconvert>
    <pathconvert property="testexam.absdst.dir" pathsep=" ">
      <path  location="${testexam.dst.dir}"/>
    </pathconvert>
    
    <!-- Source file to be processed by testexam -->
    <filelist id="testexam.filelist" dir="${testexam.abssrc.dir}"
	      files="${testexam.file}"/>
    
    <!-- Multilingual source file to be processed by testexam -->
    <filelist id="testexam.multilingual.filelist" dir="${testexam.abssrc.dir}"
	      files="${testexam.multilingual.file}"/>

    <!-- Obtain the filelist with the source file to see if it is empty -->
    <pathconvert property="testexam.source.filelist.property" pathsep=" ">
      <filelist refid="testexam.filelist"/>
      <filelist refid="testexam.multilingual.filelist"/>
    </pathconvert>

    <!-- Condition to enable/disable the rest of the execution -->
    <condition property="testexam.check">
      <and>
	<!-- There must be some file defined -->
        <not>
	  <equals arg1="${testexam.source.filelist.property}" arg2="" trim="true"/>
	</not>
	<!-- At least one of the variable must be empty -->
	<or>
	  <equals arg1="${testexam.file}" arg2="" trim="true"/>
	  <equals arg1="${testexam.multilingual.file}" arg2="" trim="true"/>
	</or>
      </and>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="${testexam.debug.level}">  testexam.check              = "${testexam.check}"</echo>
  </target>

  <!-- Process the file through the four steps until the exam is produced -->
  <target name="testexam.processing" depends="testexam.init" if="testexam.check"
	  description="Process the testexam file">

    <echo>testexam.processing  (1/5)  CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Dump.xsl"/>
      <param name="xsltproc.output.format" value="_raw.xml"/>
      <param name="xsltproc.files"         value="${testexam.file}
						  ${testexam.multilingual.file}"/>
      <param name="xsltproc.extra.args"
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <!-- Obtain the filelist with the _raw suffix  -->
    <pathconvert property="testexam.source.raw.filelist.property" pathsep=" ">
      <filelist refid="testexam.filelist"/>
      <filelist refid="testexam.multilingual.filelist"/>
      <mapper type="glob" from="*.xml" to="*_raw.xml"/>
    </pathconvert>

    <echo>testexam.processing  (2/5)  RUN(Shuffling)</echo>

    <!-- Generating the shuffled versions -->
    <java classname="Shuffle" jvm="/usr/bin/java" output="build.out"
	  append="yes">
      <classpath>
	<pathelement 
	  location="${ada.home}/lib/TestShuffle/gol.jar"/>
	<pathelement 
	  location="${ada.home}/lib/TestShuffle/xercesImpl.jar"/>
	<pathelement 
	  location="${ada.home}/lib/TestShuffle/jdom.jar"/>
	<pathelement 
	  location="${ada.home}/lib/TestShuffle"/>
      </classpath>
      <arg value="${testexam.source.raw.filelist.property}"/>
    </java>

    <!-- Remove _raw from version 1 file name -->
    <move todir="${testexam.absdst.dir}" includeemptydirs="false">
      <fileset dir="${testexam.absdst.dir}">
	<include name="*_raw_1.xml"/>
      </fileset>
      <mapper type="glob" from="*_raw_1.xml" to="*_1.xml"/>
    </move>
    
    <!-- Remove _raw from version 2 file name -->
    <move todir="${testexam.absdst.dir}" includeemptydirs="false">
      <fileset dir="${testexam.absdst.dir}">
	<include name="*_raw_2.xml"/>
      </fileset>
      <mapper type="glob" from="*_raw_2.xml" to="*_2.xml"/>
    </move>
    
    <!-- Obtain a filelist with the newly produced files -->
    <pathconvert property="testexam.multilingual.raw.version1.filelist.property" 
		 pathsep=" ">
      <filelist refid="testexam.multilingual.filelist"/>
      <mapper type="glob" from="${testexam.absdst.dir}/*.xml" to="*_1.xml"/>
    </pathconvert>
    <pathconvert property="testexam.multilingual.raw.version2.filelist.property" 
		 pathsep=" ">
      <filelist refid="testexam.multilingual.filelist"/>
      <mapper type="glob" from="${testexam.absdst.dir}/*.xml" to="*_2.xml"/>
    </pathconvert>

    <echo>testexam.processing  (3a/5) CALL(xsltproc.processing)</echo>

    <!-- Call Multilingual processing of the exam -->
    <antcall target="xsltprocmultilingual.processing" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"         
	     value="${testexam.multilingual.raw.version1.filelist.property} 
		    ${testexam.multilingual.raw.version2.filelist.property}"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <echo>testexam.processing  (3b/5) CALL(xsltproc.processing)</echo>

    <!-- Call Multilingual processing of the solution -->
    <antcall target="xsltprocmultilingual.processing" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"         
	     value="${testexam.multilingual.raw.version1.filelist.property} 
		    ${testexam.multilingual.raw.version2.filelist.property}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <echo>testexam.processing  (3c/5) CALL(xsltproc.processing)</echo>

    <!-- Call Multilingual processing for the document with stats  -->
    <antcall target="xsltprocmultilingual.processing" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"         
	     value="${testexam.multilingual.raw.version1.filelist.property} 
		    ${testexam.multilingual.raw.version2.filelist.property}"/>
      <param name="xsltproc.output.format" value="_stats.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <!-- Obtain a filelist with the newly produced files -->
    <pathconvert property="testexam.raw.version1.filelist.property" pathsep=" ">
      <filelist refid="testexam.filelist"/>
      <mapper type="glob" from="${testexam.absdst.dir}/*.xml" to="*_1.xml"/>
    </pathconvert>
    <pathconvert property="testexam.raw.version2.filelist.property" pathsep=" ">
      <filelist refid="testexam.filelist"/>
      <mapper type="glob" from="${testexam.absdst.dir}/*.xml" to="*_2.xml"/>
    </pathconvert>

    <echo>testexam.processing  (3d/5) CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${testexam.raw.version1.filelist.property} 
		    ${testexam.raw.version2.filelist.property}
		    ${testexam.file}
		    ${testexam.multilingual.file}"/>
      <param name="xsltproc.extra.args"
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <echo>testexam.processing  (3e/5) CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${testexam.raw.version1.filelist.property} 
		    ${testexam.raw.version2.filelist.property}
		    ${testexam.file}
		    ${testexam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <echo>testexam.processing  (3f/5) CALL(xsltproc.processing)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.processing" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${testexam.raw.version1.filelist.property} 
		    ${testexam.raw.version2.filelist.property}
		    ${testexam.file}
		    ${testexam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_stats.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.processing         END(xsltproc.processing ES)</echo>

    <echo>testexam.processing  (4/5)  CALL(latex.processing)</echo>

    <!-- Call latex -->
    <antcall target="latex.processing" inheritAll="false">
      <param name="latex.src.dir"       value="${testexam.dst.dir}"/>
      <param name="latex.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="latex.files"         value="tex-math-equations.tex"/>
      <param name="latex.extra.args"    value="-interaction=nonstopmode"/>
    </antcall>

    <echo>testexam.processing         END(latex.processing ES)</echo>

    <echo>testexam.processing  (5/5)  CALL(dvi2bitmap.processing)</echo>

    <mkdir dir="${testexam.absdst.dir}${file.separator}${testexam.equation.dir}"/>

    <!-- Call dvi2bitmap -->
    <antcall target="dvi2bitmap.processing" inheritAll="false">
      <param name="dvi2bitmap.src.dir"       value="${testexam.dst.dir}"/>
      <param name="dvi2bitmap.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="dvi2bitmap.files"         value="tex-math-equations.dvi"/>
    </antcall>

    <echo>testexam.processing         END(dvi2bitmap.processing ES)</echo>

  </target>

  <!-- Clean files produced by testexam -->
  <target name="testexam.clean" depends="testexam.init" if="testexam.check" 
	  description="Remove files produced by testexam">
    
    <echo>testexam.clean                  CALL(dvi2bitmap.clean)</echo>

    <!-- Call dvi2bitmap -->
    <antcall target="dvi2bitmap.clean" inheritAll="false">
      <param name="dvi2bitmap.src.dir"       value="${testexam.dst.dir}"/>
      <param name="dvi2bitmap.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="dvi2bitmap.files"         value="tex-math-equations.dvi"/>
    </antcall>

    <echo>testexam.clean              END(dvi2bitmap.clean)</echo>

    <delete failonerror="false">
      <fileset dir="${testexam.equation.dir}" includes="*"/>
    </delete>

    <delete dir="${testexam.equation.dir}" failonerror="false"/>

    <delete failonerror="false" file="missfont.log"/>

    <echo>testexam.clean                  CALL(latex.clean)</echo>

    <!-- Call latex -->
    <antcall target="latex.clean" inheritAll="false">
      <param name="latex.src.dir"       value="${testexam.dst.dir}"/>
      <param name="latex.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="latex.files"         value="tex-math-equations.tex"/>
      <param name="latex.extra.args"    value="-interaction=nonstopmode"/>
    </antcall>

    <echo>testexam.clean              END(latex.clean)</echo>

    <delete failonerror="false" file="tex-math-equations.tex"/>

    <echo>testexam.clean       (3f/5) CALL(xsltproc.clean)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${testexam.raw.version1.filelist.property} 
		    ${testexam.raw.version2.filelist.property}
		    ${testexam.file}
		    ${testexam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_stats.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean              END(xsltproc.clean)</echo>

    <echo>testexam.clean       (3e/5) CALL(xsltproc.clean)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${testexam.raw.version1.filelist.property} 
		    ${testexam.raw.version2.filelist.property}
		    ${testexam.file}
		    ${testexam.multilingual.file}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean              END(xsltproc.clean)</echo>

    <echo>testexam.clean       (3d/5) CALL(xsltproc.clean)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.files"         
	     value="${testexam.raw.version1.filelist.property} 
		    ${testexam.raw.version2.filelist.property}
		    ${testexam.file}
		    ${testexam.multilingual.file}"/>
      <param name="xsltproc.extra.args"
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean              END(xsltproc.clean)</echo>

    <echo>testexam.clean       (3c/5) CALL(xsltproc.clean)</echo>

    <!-- Call Multilingual cleaning for the document with stats -->
    <antcall target="xsltprocmultilingual.clean" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"         
	     value="${testexam.multilingual.raw.version1.filelist.property} 
		    ${testexam.multilingual.raw.version2.filelist.property}"/>
      <param name="xsltproc.output.format" value="_stats.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam ada.testquestions.include.history yes 
		    --stringparam ada.testquestions.include.id yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean              END(xsltproc.clean)</echo>

    <echo>testexam.clean       (3b/5) CALL(xsltproc.clean)</echo>

    <!-- Call Multilingual cleaning for the solution -->
    <antcall target="xsltprocmultilingual.clean" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"         
	     value="${testexam.multilingual.raw.version1.filelist.property} 
		    ${testexam.multilingual.raw.version2.filelist.property}"/>
      <param name="xsltproc.output.format" value="_solution.html"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam ada.testquestions.include.solutions yes 
		    --stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean              END(xsltproc.clean)</echo>

    <echo>testexam.clean       (3a/5) CALL(xsltproc.clean)</echo>

    <!-- Call Multilingual cleaning for the exam files -->
    <antcall target="xsltprocmultilingual.clean" inheritAll="false">
      <param name="xsltproc.src.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.dst.dir"    value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file" value="${ada.home}/ADA_Styles/Exam.xsl"/>
      <param name="xsltproc.multilingual.files"         
	     value="${testexam.multilingual.raw.version1.filelist.property} 
		    ${testexam.multilingual.raw.version2.filelist.property}"/>
      <param name="xsltproc.extra.args"    
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean              END(xsltproc.clean)</echo>

    <delete dir="${testexam.absdst.dir}" 
	    includes="__bogus__file__name 
                      ${testexam.raw.version1.filelist.property} 
		      ${testexam.raw.version2.filelist.property}"/>

    <echo>testexam.clean       (1/5)  CALL(xsltproc.clean)</echo>

    <!-- Call xsltproc -->
    <antcall target="xsltproc.clean"       inheritAll="false">
      <param name="xsltproc.src.dir"       value="${testexam.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${testexam.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${ada.home}/ADA_Styles/Dump.xsl"/>
      <param name="xsltproc.output.format" value="_raw.xml"/>
      <param name="xsltproc.files"         value="${testexam.file}
						  ${testexam.multilingual.file}"/>
      <param name="xsltproc.extra.args"
	     value="--stringparam passivetex.extensions 1
		    --stringparam tex.math.in.alt latex
		    ${testexam.extra.args}"/>
    </antcall>

    <echo>testexam.clean       (1/5)  END(xsltproc.clean)</echo>
  </target>

  <!-- Dump the properties defined in this script -->
  <target name="testexam.dump.properties" depends="testexam.init">
    <echo level="${testexam.debug.level}"> ------ testexam properties ----
    testexam.exec           ="${testexam.exec}"
    testexam.abssrc.dir     ="${testexam.abssrc.dir}"
    testexam.absdst.dir     ="${testexam.absdst.dir}"
    testexam.file           ="${testexam.file}"
    testexam.multilingual.file ="${testexam.multilingual.file}"</echo>
  </target>

  <!-- If entering through this target, build.out is deleted -->
  <target name="testexam" depends="testexam.init, initial.delete.build.out, testexam.processing"/>

</project>
