<?xml version="1.0" encoding="UTF-8"?>

<project name="Create documents for a lab" default="laboratory.processing">

  <!--
      Given the following properties and fileset:

      laboratory.src.dir: directory from where to take the source files
      laboratory.dst.dir: directory where the produced files are stored
      laboratory.output.format: Extension of the output file
      laboratory.style.file: Style file to be used
      laboratory.files: comma/space separated list of files to process
      laboratory.files: list of files to process with two languages

      It invokes three times xsltproc to generate the regular HTML document, the
      one with the solution and pguide profiles.
  -->

  <!-- Checks for availability of different binaries -->
  <import file="Cleaning.xml"/>
  <import file="SubRecursive.xml"/>
  <import file="Xsltproc.xml"/>

  <!-- Property definition -->
  <property name="laboratory.src.dir"       value="${basedir}"/>
  <property name="laboratory.dst.dir"       value="${laboratory.src.dir}"/>
  <property name="laboratory.style.file" 
	    value="${ada.home}/XslStyles/Laboratory.xsl"/>
  <property name="laboratory.submit.style.file" 
	    value="${ada.home}/XslStyles/Submit.xsl"/>
  <property name="laboratory.output.format"   value="html"/>
  <property name="laboratory.files"           value=""/>
  <property name="laboratory.bilingual.files" value=""/>

  <!-- Internal properties -->
  <property name="laboratory.profile.lang"    value=""/>
  <property name="laboratory.creating.files"  value=""/>
  <property name="laboratory.manipulate.target" 
	    value="xsltproc.processing"/>

  <!-- Preliminary target to verify that certain minimum conditions hold before
       executing the regular targets. -->
  <target name="laboratory.check.values" 
	  depends="initial.check, laboratory.dump.properties">

    <!-- Condition to enable/disable the rest of the execution -->
    <condition property="laboratory.check">
      <and>
	<!-- The src.dir needs to be non-empty. -->
        <not><equals arg1="${laboratory.src.dir}" arg2=""/></not>
	<available file="${laboratory.src.dir}"/> 
	<!-- There must be some files defined -->
	<or>
	  <not><equals arg1="${laboratory.files}" arg2=""/></not>
	  <not><equals arg1="${laboratory.bilingual.files}" arg2=""/></not>
	</or>
	<!-- Require a non-empty dst.dir -->
        <not><equals arg1="${laboratory.dst.dir}" arg2=""/></not>
	<!-- Require a non-empty and available stylesheet -->
        <not><equals arg1="${laboratory.style.file}" arg2=""/></not>
	<available file="${laboratory.style.file}"/>
      </and>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="info">    laboratory.check          = "${laboratory.check}"</echo>
  </target>

  <!-- Target to notify that the regular target has not been executed. This is
  to notify the user -->
  <target name="laboratory.processing.NOT" unless="laboratory.check">
    <echo>laboratory.processing       ---</echo>
    <echo>${basedir}</echo>
  </target>

  <!-- Invoke xsltprocessing -->
  <target name="laboratory.processing" 
	  depends="laboratory.check.values, laboratory.processing.NOT"
	  if="laboratory.check" description="Call all the multiple xsltprocs">

    <echo>laboratory.processing       CALL(xsltproc.processing 3 versions)</echo>

    <!-- Create the dst directory -->
    <mkdir dir="${laboratory.dst.dir}" />

    <!-- Create all the files (language neutral) -->
    <antcall target="laboratory.manipulate.files" inheritAll="false">
      <param name="laboratory.creating.files" value="${laboratory.files}"/>
    </antcall>

    <!-- Create all the files in spanish -->
    <antcall target="laboratory.manipulate.files" inheritAll="false">
      <param name="laboratory.creating.files" 
	     value="${laboratory.bilingual.files}"/>
      <param name="laboratory.profile.lang"
	     value="--stringparam profile.lang es"/>
      <param name="laboratory.output.format"   value="es.html"/>
    </antcall>

    <!-- Create all the files in english -->
    <antcall target="laboratory.manipulate.files" inheritAll="false">
      <param name="laboratory.creating.files" 
	     value="${laboratory.bilingual.files}"/>
      <param name="laboratory.profile.lang"
	     value="--stringparam profile.lang en"/>
      <param name="laboratory.output.format"   value="en.html"/>
    </antcall>

    <echo>laboratory.processing       END(xsltproc.processing 3 versions)</echo>
  </target>

  <!-- Target to notify that the regular target has not been executed. This is
  to notify the user -->
  <target name="laboratory.clean.NOT" unless="laboratory.check">
    <echo>laboratory.clean            ---</echo>
    <echo>${basedir}</echo>
  </target>

  <!-- Clean files produced by laboratory -->
  <target name="laboratory.clean" 
	  depends="laboratory.check.values, laboratory.clean.NOT"
	  if="laboratory.check"
	  description="Remove files produced by laboratory">

    <echo>laboratory.clean            CALL(xsltproc.processing 3 versions)</echo>

    <!-- Delete all the language neutral files -->
    <antcall target="laboratory.manipulate.files" inheritAll="false">
      <param name="laboratory.creating.files" value="${laboratory.files}"/>
      <param name="laboratory.manipulate.target" value="xsltproc.clean"/>
    </antcall>

    <!-- Delete all the files in spanish -->
    <antcall target="laboratory.manipulate.files" inheritAll="false">
      <param name="laboratory.creating.files" 
	     value="${laboratory.bilingual.files}"/>
      <param name="laboratory.profile.lang"
	     value="--stringparam profile.lang es"/>
      <param name="laboratory.output.format"   value="es.html"/>
      <param name="laboratory.manipulate.target" value="xsltproc.clean"/>
    </antcall>

    <!-- Delete all the files in english -->
    <antcall target="laboratory.manipulate.files" inheritAll="false">
      <param name="laboratory.creating.files" 
	     value="${laboratory.bilingual.files}"/>
      <param name="laboratory.profile.lang"
	     value="--stringparam profile.lang en"/>
      <param name="laboratory.output.format"   value="en.html"/>
      <param name="laboratory.manipulate.target" value="xsltproc.clean"/>
    </antcall>

    <echo>laboratory.clean            END(xsltproc.processing 3 versions)</echo>
  </target>

  <target name="laboratory.dump.properties" depends="initial.check">
    <echo level="info"> ------ Laboratory properties ----
    laboratory.src.dir           ="${laboratory.src.dir}"
    laboratory.dst.dir           ="${laboratory.dst.dir}"
    laboratory.style.file        ="${laboratory.style.file}"
    laboratory.submit.style.file ="${laboratory.style.file}"
    laboratory.output.format     ="${laboratory.out.format}"
    laboratory.files             ="${laboratory.files}"</echo>
  </target>

  <!-- If entering through this target, build.out is deleted -->
  <target name="laboratory" depends="initial.delete.build.out, laboratory.processing"/>

  <!-- Create the regular file, solution and professor guide -->
  <target name="laboratory.manipulate.files">

    <!-- Call xsltproc with no extra options -->
    <antcall target="${laboratory.manipulate.target}" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${laboratory.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${laboratory.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${laboratory.style.file}"/>
      <param name="xsltproc.output.format" value="${laboratory.output.format}"/>
      <param name="xsltproc.files"         value="${laboratory.creating.files}"/>
      <param name="xsltproc.extra.args"    value="${laboratory.profile.lang}"/>
    </antcall>

    <!-- Call xsltproc to generate the solution -->
    <antcall target="${laboratory.manipulate.target}" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${laboratory.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${laboratory.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${laboratory.style.file}"/>
      <param name="xsltproc.output.format"
	     value="solution.${laboratory.output.format}"/>
      <param name="xsltproc.files"      value="${laboratory.creating.files}"/>
      <param name="xsltproc.extra.args" 
	     value="--stringparam laboratory.include.solutions yes
                    ${laboratory.profile.lang}"/>
    </antcall>

    <!-- Call xsltproc to generate the professor guide -->
    <antcall target="${laboratory.manipulate.target}" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${laboratory.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${laboratory.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${laboratory.style.file}"/>
      <param name="xsltproc.output.format"
	     value="pguide.${laboratory.output.format}"/>
      <param name="xsltproc.files"      value="${laboratory.creating.files}"/>
      <param name="xsltproc.extra.args" 
	     value="--stringparam laboratory.include.guide yes
                    --stringparam laboratory.include.solutions yes
                    ${laboratory.profile.lang}"/>
    </antcall>

    <!-- Call xsltproc to generate the submission page -->
    <antcall target="${laboratory.manipulate.target}" inheritAll="false">
      <param name="xsltproc.src.dir"       value="${laboratory.src.dir}"/>
      <param name="xsltproc.dst.dir"       value="${laboratory.dst.dir}"/>
      <param name="xsltproc.style.file"    value="${laboratory.submit.style.file}"/>
      <param name="xsltproc.output.format"
	     value="submit.${laboratory.output.format}"/>
      <param name="xsltproc.files"      value="${laboratory.creating.files}"/>
      <param name="xsltproc.extra.args" 
	     value="${laboratory.profile.lang}"/>
    </antcall>
  </target>

</project>

