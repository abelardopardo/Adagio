<?xml version="1.0" encoding="UTF-8"?>

<project name="Transltate PPT to PDF with OpenOffice" default="ppt2pdf">

  <description>Translate PPT files to PDF (Experimental!)</description>
  <!--
      Given the following properties:

      ppt2pdf.src.dir: directory from where to take the source files
      ppt2pdf.dst.dir: directory where the produced files are stored
      ppt2pdf.files: comma/space separated list of files to process

      Produce ??
  -->

  <import file="InitialCheck.xml"/>

  <property name="ppt2pdf.exec" value="ada_ppt_to_pdf"/>

  <ada.set.execution.possible ADA.EXECUTABLE.NAME="${ppt2pdf.exec}"
                              ADA.PREFIX="ppt2pdf" />
  
  <!-- Private properties -->
  <property name="ppt2pdf.debug.level"    value="${ada.debug.level}"
	    description="Debug level to apply to these rules (see ada.debug.level)"/>

  <target name="ppt2pdf.init" depends="ada.init" if="ppt2pdf.execution.possible">
    <!-- Public Property definition -->
    <property name="ppt2pdf.src.dir"        value="${basedir}"
	      description="Directory where the sources are taken"/>
    <property name="ppt2pdf.files"          value=""
	      description="Source file names (no path, it is ppt2pdf.src.dir)"/>
    
    <!-- Define two properties containing the absolute src and dst paths -->
    <pathconvert property="ppt2pdf.abssrc.dir" pathsep=" ">
      <path location="${ppt2pdf.src.dir}"/>
    </pathconvert>
    <!-- Source files to be processed by ppt2pdf (fileset to allow wildcards) -->
    <fileset id="ppt2pdf.fileset" dir="${ppt2pdf.abssrc.dir}"
	     includes="__bogus__file__name ${ppt2pdf.files}"/>

    <!-- Obtain the filelist with the source files to see if it is empty -->
    <pathconvert property="ppt2pdf.source.filelist.property" pathsep=" ">
      <fileset refid="ppt2pdf.fileset"/>
    </pathconvert>

    <!-- Condition to enable/disable the rest of the execution -->
    <condition property="ppt2pdf.check">
      <!-- 
	   There must be some files in the fileset (after regexp expansion) 
      -->
      <not>
	<equals arg1="${ppt2pdf.source.filelist.property}" arg2="" trim="true"/>
      </not>
    </condition>

    <!-- Dump the value of the properties just computed. -->
    <echo level="${ppt2pdf.debug.level}">  ppt2pdf.check              = "${ppt2pdf.check}"
  ppt2pdf.execution.possible = ${ppt2pdf.execution.possible}</echo>

  </target>

  <!-- Regular target. It is executed if the check property is true -->
  <target name="ppt2pdf.processing" depends="ppt2pdf.init"
	  if="ppt2pdf.check" description="Translate the ppt files to pdf using openoffice">

    <echo>ppt2pdf.processing          RUN</echo>
    <echo level="${ppt2pdf.debug.level}">${basedir}</echo>

    <!-- Execute the command. Watch out for src.dir and dst.dir -->
    <apply dir="${basedir}" parallel="false" dest="${ppt2pdf.abssrc.dir}" 
	   append="yes" failonerror="true" executable="${ppt2pdf.exec}" 
	   output="build.out">
      <fileset refid="ppt2pdf.fileset"/>
      <!-- Mapper from source files to produced files -->
      <mapper type="glob" from="*.ppt" to="*.pdf"/>
    </apply>    
  </target>

  <!-- Clean files produced by ppt2pdf -->
  <target name="ppt2pdf.clean" depends="ppt2pdf.init"
	  if="ppt2pdf.check" description="Remove files produced by ppt2pdf">

    <echo>ppt2pdf.clean               RUN</echo>
    <echo level="${ppt2pdf.debug.level}">${basedir}</echo>

    <!-- Obtain a property with the produced files. -->
    <pathconvert property="ppt2pdf.target.filelist.property" pathsep=" ">
      <fileset refid="ppt2pdf.fileset"/>
      <mapper type="glob" from="*.ppt" to="*.pdf"/>
    </pathconvert>

    <!-- Dump explicitly the files to be deleted -->
    <echo> deleted = ${ppt2pdf.target.filelist.property}</echo>

    <!-- Perform the delete operation. The failonerror attribute is needed
	 and must be set fo false because the dst directory might have been
	 removed  -->
    <delete failonerror="false" includeemptydirs="true">
      <files includes="${ppt2pdf.target.filelist.property}"/>
    </delete>
  </target>

  <!-- Dump the properties defined in this script -->
  <target name="ppt2pdf.dump.properties" depends="ppt2pdf.init">
    <echo level="${ppt2pdf.debug.level}"> ------ ppt2pdf properties ----
    ppt2pdf.exec       ="${ppt2pdf.exec}"
    ppt2pdf.abssrc.dir ="${ppt2pdf.abssrc.dir}"
    ppt2pdf.files      ="${ppt2pdf.files}"</echo>
  </target>

  <target name="ppt2pdf.report.YES" depends="ppt2pdf.init"
	  if="ppt2pdf.execution.possible">
    <echo>                   | * Only If |</echo>
    <echo>ppt2pdf            |OpenOffice |</echo>
    <echo>                   |2.4 or latr|</echo>
  </target>

  <target name="ppt2pdf.report.NO" depends="ppt2pdf.init"
	  unless="ppt2pdf.execution.possible">
    <echo>ppt2pdf            |           |     * (needs OpenOffice 2.4 or later)</echo>
  </target>

  <target name="ppt2pdf.report" depends="ppt2pdf.report.YES,
				      ppt2pdf.report.NO"/>

  <!-- If entering through this target, build.out is deleted -->
  <target name="ppt2pdf" depends="ppt2pdf.init, initial.delete.build.out, ppt2pdf.processing"/>
</project>
